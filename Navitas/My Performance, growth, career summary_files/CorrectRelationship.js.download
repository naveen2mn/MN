var changeRelationType="";var newMgrs=null;var oldMgrs=null;var workflowName="";var userWFActionEmpRelation="";function correctRelationship(a){newMgrs=new Array();oldMgrs=new Array();changeRelationType="manager";adrh.viewRecordForEdit("EmpRelationshipDetail","","correctRelationship",a,"",{async:defaultAsyncValue,callback:function(b){dwr.util.setValue("errorMsg","",{escapeHtml:false});showFancyBox(b.response)}})}function correctSubordinate(a){var b="";if(a=="myProfileRelationshipView"){b="subordinateOnMyProfile"}else{b="subordinateOnTeamProfile"}newMgrs=new Array();oldMgrs=new Array();changeRelationType="subordinate";adrh.viewRecordForEdit("EmpRelationshipDetail","","workflowMode",b,"",{async:defaultAsyncValue,callback:function(c){dwr.util.setValue("errorMsg","",{escapeHtml:false});showFancyBox(c.response)}})}function deleteCurrentRelationShipForEmp(b,e,a){changeRelationType="deleteRelationshipForEmp";var c=b;var d=new Object();d.managerId=document.getElementById("oldMgrId"+c).value;d.managerNo=document.getElementById("oldManagerNo"+c).value;d.managerName=document.getElementById("oldManagerName"+c).value;d.relationshipName=document.getElementById("relationshipName"+c).value;d.empId=document.getElementById("empIdForRelationship").value;d.emprelationshipId=document.getElementById("emprelationshipId"+c).value;d.status=document.getElementById("status"+c).value;d.relationshipType=document.getElementById("relationshipType"+c).value;oldMgrs[0]=d;startAjaxWorkflowDialogEmpRelationshipDetail(e)}function validateEmpRelationshipDetail(){if(changeRelationType=="manager"){return validateManager()}else{if(changeRelationType=="subordinate"){return validateSubordinate()}else{if(changeRelationType=="deleteRelationshipForEmp"){return true}else{jAlert("Please select at least one relationship to change before submit.");return false}}}}function validateManager(){var b=document.getElementById("relationshipLength").value;var g=false;var a=0;for(var c=0;c<b;c++){var d=new Object();var f=new Object();var h=document.getElementById("managerName"+c).value;d.managerId=document.getElementById("oldMgrId"+c).value;f.managerId=document.getElementById("managerName"+c+"_hidden").value;var e=document.getElementById("changeRelationship"+c).checked;if(e){g=true;if(trim(h)==""){jAlert("Please specify an employee for relationship.","",document.getElementById("managerName"+c));return false}if(f.managerId==-1){jAlert("Please specify an employee for relationship.","",document.getElementById("managerName"+c));return false}if(d.managerId==f.managerId){jAlert("New Manager/Reviewer can not be same as Old Manager/Reviewer. Please specify another Manager/Reviewer.","",document.getElementById("managerName"+c));return false}d.managerNo=document.getElementById("oldManagerNo"+c).value;f.managerNo=document.getElementById("managerNo"+c).value;d.managerName=document.getElementById("oldManagerName"+c).value;f.managerName=document.getElementById("managerName"+c).value;d.relationshipName=document.getElementById("relationshipName"+c).value;f.relationshipName=document.getElementById("newRelationshipName"+c).value;d.empId=document.getElementById("empIdForRelationship").value;f.empId=document.getElementById("empIdForRelationship").value;d.emprelationshipId=document.getElementById("emprelationshipId"+c).value;f.emprelationshipId=document.getElementById("emprelationshipNewId"+c).value;d.status=document.getElementById("status"+c).value;f.status=document.getElementById("statusNewMgr"+c).value;d.relationshipType=document.getElementById("relationshipType"+c).value;f.relationshipType=document.getElementById("newMgrRelationshipType"+c).value;oldMgrs[a]=d;newMgrs[a]=f;a++}}if(!g){jAlert("Please select at least one relationship to change before submit.");return false}return true}function validateSubordinate(){var f=document.getElementById("teoLength").value;var a=false;var c=0;for(var d=0;d<f;d++){var b=document.getElementById("changeRelationship"+d).checked;if(b){a=true;var e=new Object();e.empId=document.getElementById("oldSubordinateId"+d).value;e.managerId=document.getElementById("empIdForRelationship").value;e.empNo=document.getElementById("oldSubordinateNo"+d).value;e.employeeName=document.getElementById("oldSubordinateName"+d).value;e.relationshipName=document.getElementById("relationshipName"+d).value;e.emprelationshipId=document.getElementById("emprelationshipId"+d).value;e.status=document.getElementById("status"+d).value;e.relationshipType=document.getElementById("relationshipType"+d).value;oldMgrs[c]=e;c++}}var k=document.getElementById("noOfEmployees").value;var h=document.getElementById("selectedEmpIds");for(var d=0;d<h.options.length;d++){var g=new Object();g.empId=h.options[d].value;g.employeeName=h.options[d].text;g.relationshipName="Manager";g.managerId=document.getElementById("empIdForRelationship").value;g.emprelationshipId=-1;g.status=1;g.relationshipType=1;newMgrs[d]=g}if(!a&&k==0){jAlert("Please change subordinate relationship before submit.");return false}return true}function getInitTeoEmpRelationshipDetail(){if(changeRelationType=="manager"){return initManager()}else{if(changeRelationType=="subordinate"){return initSubordinate()}else{if(changeRelationType=="deleteRelationshipForEmp"){return initManager()}}}}function initManager(){var a=new Object();a.roleClass="saigun.empxtrack.common.roles.HRManagerRole";a.managersTeo=oldMgrs;a.newManagersTeo=newMgrs;a.empId=document.getElementById("empIdForRelationship").value;return a}function initSubordinate(){var a=new Object();a.roleClass="saigun.empxtrack.common.roles.HRManagerRole";a.subordinatesTeo=oldMgrs;a.newSubordinatesTeo=newMgrs;a.empId=document.getElementById("empIdForRelationship").value;return a}function setWFVariablesEmpRelationshipDetail(){document.getElementById("curPersistenceClass").value="saigun.empxtrack.persistencehelpers.EmployeeRelationshipPersistence";document.getElementById("workflowType").value="CorrectRelationship";if(userWFActionEmpRelation!="save"&&userWFActionEmpRelation!="submit"){document.getElementById("wfAction").value="create-submit"}document.getElementById("wfContextEmpId").value=document.getElementById("empIdForRelationship").value}function postStartAjaxEmpRelationshipDetail(a,b){if(document.getElementById("workflowNameId")!=null){workflowName=document.getElementById("workflowNameId").value}if(workflowName=="Lite-Direct"){adrh.viewAllRecords("EmpRelationshipDetail","myTeamRelationshipView","","",{async:defaultAsyncValue,callback:function(c){dwr.util.setValue("myTeamRelationshipView",c.response,{escapeHtml:false})}})}if(userWFActionEmpRelation!=""&&userWFActionEmpRelation!="save"){dwr.util.setValue("myProfileRelationshipErroMsg",a,{escapeHtml:false})}else{dwr.util.setValue("errorMsg",a,{escapeHtml:false})}}function toggleAjax(a,b){changeRelationType="manager";document.getElementById("managerName"+b).disabled=true;if(a.checked){document.getElementById("managerName"+b).disabled=false}return true}function gotoIndiviualSearchRecord(a,b,c){document.empCommonSearchWizardForm.parentFormName.value="ExecuteTemplateForm";document.empCommonSearchWizardForm.userType.value="admin";window.open("","EmpXtrackSearchWindow",features);document.empCommonSearchWizardForm.target="EmpXtrackSearchWindow";document.empCommonSearchWizardForm.listName.value="selectedEmpIds";document.empCommonSearchWizardForm.multiSelection.value="false";document.empCommonSearchWizardForm.searchName.value="search";document.empCommonSearchWizardForm.nameParam.value=a;document.empCommonSearchWizardForm.numberParam.value=b;document.empCommonSearchWizardForm.idParam.value=c;document.empCommonSearchWizardForm.submit()}function gotoSearchWindow(){var a=document.ExecuteTemplateForm;window.open("","EmpXLiteSearchWindow",features);document.empCommonSearchWizardForm.target="EmpXLiteSearchWindow";document.empCommonSearchWizardForm.parentFormName.value=a.name;document.empCommonSearchWizardForm.listName.value="selectedEmpIds";document.empCommonSearchWizardForm.listCount.value="noOfEmployees";document.empCommonSearchWizardForm.searchName.value="search";document.empCommonSearchWizardForm.userType.value="admin";document.empCommonSearchWizardForm.multiSelection.value="true";document.empCommonSearchWizardForm.submit()}function addToEmpList(f){var a=document.getElementById(f);var b=document.getElementById("subordinateKey").value;var e=document.getElementById("subordinateName_hidden").value;if(e=="-1"){return false}for(var c=0;c<a.length;c++){if(a.options[c].value==e){return false}}var d=document.createElement("OPTION");if(b!=""&&e!=""){d.text=b;d.value=e;a.options.add(d,a.length)}document.getElementById("noOfEmployees").value=a.length;document.getElementById("subordinateKey").value=""}function removeFromList(){var a=document.getElementById("selectedEmpIds");if(a.length>0){for(i=0;i<a.length;i++){if(a.options[i].selected){a.options[i]=null;i--}}document.getElementById("noOfEmployees").value=a.length}return false}function initializePopUp(){$("#errorMsg").val("");dwr.util.byId("modalPage").style.display="block";initLiteMC("modalContainer","modalPage");window.onscroll=function(){document.getElementById("modalPage").style.top=document.body.scrollTop};document.getElementById("modalPage").style.top=document.body.scrollTop}function startAjaxWorkflowForEmpRelationUpdate(){newMgrs=new Array();oldMgrs=new Array();if(document.getElementById("changeRelationTypeId").value!=null){changeRelationType=document.getElementById("changeRelationTypeId").value}if(validateEmpRelationshipDetail()==false){return false}var b=getInitTeoEmpRelationshipDetail();dwr.util.getValues(b);var e={workflowId:-1,workflowName:null,workflowType:null,workflowState:null,wfAction:null,wfUserRole:null,wfContextEmpId:-1,wfChangeAction:null,workflowTimePeriodId:-1,wfId:-1,curPersistenceClass:"",mode:"singleEmployee"};setWFVariablesEmpRelationshipDetail();dwr.util.getValues(e);var d=JSON.stringify(b);var a=JSON.stringify(e);var c=-1;var f=document.getElementById("uploadFile");if(f!=null&&trim(f.value).length>0){adrh.executeCall("EmpRelationshipDetail",d,"startAjaxWorkflow","",a,f,{async:defaultAsyncValue,callback:function(g){postStartAjaxEmpRelationshipDetail(g.responseTeo.dataObject.errorMsg,g.responseTeo.dataObject.workflowId)}})}else{adrh.executeCall("EmpRelationshipDetail",d,"startAjaxWorkflow","",a,null,{async:defaultAsyncValue,callback:function(g){postStartAjaxEmpRelationshipDetail(g.responseTeo.dataObject.errorMsg,g.responseTeo.dataObject.workflowId)}})}return true};
